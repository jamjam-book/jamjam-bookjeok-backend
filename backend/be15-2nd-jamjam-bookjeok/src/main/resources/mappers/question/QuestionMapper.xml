<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jamjam.bookjeok.domains.question.repository.mapper.QuestionMapper">

    <resultMap id="questionListResultMap" type="QuestionListDTO">
        <id property="questionId" column="question_id"/>
        <result property="writerUid" column="writer_uid"/>
        <result property="writerName" column="member_name"/>
        <result property="questionCategoriesId" column="question_categories_id"/>
        <result property="questionCategoryName" column="question_category_name"/>
        <result property="title" column="title"/>
        <result property="createdAt" column="created_at"/>
        <result property="modifiedAt" column="modified_at"/>
    </resultMap>

    <select id="findQuestions" resultMap="questionListResultMap">
        SELECT
              a.question_id
            , a.writer_uid
            , c.member_name
            , b.question_category_id
            , b.question_category_name
            , a.title
            , a.created_at
            , a.modified_at
        FROM questions a
        JOIN question_category b ON (a.question_categories_id = b.question_category_id)
        JOIN members c ON (a.writer_uid = member_uid)
        WHERE a.is_deleted = false
        ORDER BY a.created_at DESC, modified_at DESC;
    </select>

    <select id="findQuestionByQuestionId" resultType="QuestionDTO">
        SELECT
            a.question_id
            , a.writer_uid
            , c.member_name
            , a.question_categories_id
            , b.question_category_name
            , a.title
            , a.contents
            , a.created_at
            , a.modified_at
            , a.questions_img_url
         FROM questions a
         JOIN question_category b ON (a.question_categories_id = b.question_category_id)
         JOIN members c ON (a.writer_uid = member_uid)
        WHERE a.is_deleted = false
          <if test="memberUid != null">
              AND a.writer_uid = #{ memberUid }
          </if>
          AND a.question_id = #{ questionId };
    </select>

    <select id="findMemberQuestions" resultType="QuestionListDTO">
        SELECT
            a.question_id
            , a.writer_uid
            , c.member_name
            , b.question_category_id
            , b.question_category_name
            , a.title
            , a.created_at
            , a.modified_at
        FROM questions a
        JOIN question_category b ON (a.question_categories_id = b.question_category_id)
        JOIN members c ON (a.writer_uid = member_uid)
        WHERE a.is_deleted = false
        AND a.writer_uid = #{ memberUid }
        ORDER BY a.created_at DESC, modified_at DESC;
    </select>

    <select id="findQuestionCategories" resultType="QuestionCategoryDTO">
        SELECT
              question_category_id
            , question_category_name
        FROM question_category
    </select>
</mapper>